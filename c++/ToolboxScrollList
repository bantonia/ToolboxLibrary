#include "ToolboxScrollList.h"

ToolboxScrollList::ToolboxScrollList() : ToolboxGadget() {}

ToolboxScrollList::ToolboxScrollList(ObjectId windowId, ComponentId gadgetId) : ToolboxGadget(windowId, gadgetId) {}

ToolboxScrollList::ToolboxScrollList(ObjectId windowId, ComponentId gadgetId, unsigned int flags) : ToolboxGadget(windowId, gadgetId, flags) {}

unsigned int ToolboxScrollList::getState() {
  _kernel_swi_regs regs;
  this->gadgetMethod(ScrollList_GetState, &regs);
  return regs.r[0];
}

ToolboxScrollList& ToolboxScrollList::setState(unsigned int state) {
  _kernel_swi_regs regs;
  regs.r[4] = state;
  this->gadgetMethod(ScrollList_SetState, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::addItem(const char *text, const void *sprite_area, const char *sprite_name, int index) {
  _kernel_swi_regs regs;
  regs.r[4] = (int) text;
  regs.r[5] = (int) sprite_area;
  regs.r[6] = (int) sprite_name;
  regs.r[7] = index;
  this->gadgetMethod(ScrollList_AddItem, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::deleteItems(int start, int end) {
  _kernel_swi_regs regs;
  regs.r[4] = start;
  regs.r[5] = end;
  this->gadgetMethod(ScrollList_DeleteItems, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::selectItem(int index) {
  _kernel_swi_regs regs;
  regs.r[4] = index;
  this->gadgetMethod(ScrollList_SelectItem, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::deselectItem(int index) {
  _kernel_swi_regs regs;
  regs.r[4] = index;
  this->gadgetMethod(ScrollList_DeselectItem, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::getSelected(int offset, int *new_offset) {
  _kernel_swi_regs regs;
  regs.r[4] = offset;
  this->gadgetMethod(ScrollList_GetSelected, &regs);
  *new_offset = regs.r[0];
  return *this;
}

ToolboxScrollList& ToolboxScrollList::makeVisible(int index) {
  _kernel_swi_regs regs;
  regs.r[4] = index;
  this->gadgetMethod(ScrollList_MakeVisible, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::setColour(unsigned int foreground, unsigned int background) {
  _kernel_swi_regs regs;
  regs.r[4] = foreground;
  regs.r[5] = background;
  this->gadgetMethod(ScrollList_SetColour, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::getColour(unsigned int *foreground, unsigned int *background) {
  _kernel_swi_regs regs;
  this->gadgetMethod(ScrollList_GetColour, &regs);
  *foreground = (unsigned int) regs.r[0];
  *background = (unsigned int) regs.r[1];
  return *this;
}

ToolboxScrollList& ToolboxScrollList::setFont(const char *font_name, unsigned int width, unsigned int height) {
  _kernel_swi_regs regs;
  regs.r[4] = (int) font_name;
  regs.r[5] = width;
  regs.r[6] = height;
  this->gadgetMethod(ScrollList_SetFont, &regs);
  return *this;
}

ToolboxScrollList& ToolboxScrollList::getItemText(char *buffer, int size, int index, int *nbytes) {
  _kernel_swi_regs regs;
  regs.r[4] = (int) buffer;
  regs.r[5] = size;
  regs.r[6] = index;
  this->gadgetMethod(ScrollList_GetItemText, &regs);
  *nbytes = (int) regs.r[5];
  return *this;
}

unsigned int ToolboxScrollList::countItems() {
  _kernel_swi_regs regs;
  this->gadgetMethod(ScrollList_CountItems, &regs);
  return regs.r[0];
}

ToolboxScrollList& ToolboxScrollList::setItemText(char *new_text, int index) {
  _kernel_swi_regs regs;
  regs.r[4] = (int) new_text;
  regs.r[5] = index;
  this->gadgetMethod(ScrollList_SetItemText, &regs);
  return *this;
}

