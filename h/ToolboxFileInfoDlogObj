#ifndef __cplusplus
#error Header file "ToolboxFileInfoDlogObj.h" may only be used from C++
#endif
#pragma force_top_level
#pragma include_only_once

#ifndef __ToolboxFileInfoDlogObj_h
#define __ToolboxFileInfoDlogObj_h

#include "fileinfo.h"
#include "ClassType.h"
#include "ToolboxObj.h"

class ToolboxFileInfoDlogObj : public ToolboxObj {
  public:
    ToolboxFileInfoDlogObj();
    ToolboxFileInfoDlogObj(ObjectId objectId);
    ToolboxFileInfoDlogObj(IdBlock *idBlock);
    ~ToolboxFileInfoDlogObj();
    int getWindowId();
    ToolboxFileInfoDlogObj& setModified();
    ToolboxFileInfoDlogObj& setModified(int modified);
    ToolboxFileInfoDlogObj& setNotModified();
    int isModified();
    ToolboxFileInfoDlogObj& setFileType(int fileType);
    int getFileType();
    ToolboxFileInfoDlogObj& setFileName(char *fileName);
    int getFileName();
    int getFileName(char *fileNameBuffer, int bufSize);
    ToolboxFileInfoDlogObj& setFileSize(int fileSize);
    int getFileSize();
    ToolboxFileInfoDlogObj& setDate(int *UTC);
    ToolboxFileInfoDlogObj& getDate(int *UTC);
    ToolboxFileInfoDlogObj& setTitle(char *title);
    int getTitleSize();
    int getTitle(char *titleBuffer, int bufSize);
    ToolboxFileInfoDlogObj& setObjectId(ObjectId objectId);
    ToolboxFileInfoDlogObj& setFlags(unsigned int flags);
    ToolboxFileInfoDlogObj& clearFlags();

    void showProperties() {}
    char* getClassName() { return "ToolboxFileInfoDlogObj";}
    int getClassType() { return ClassType_ToolboxFileInfoDlogObj;}
};

#endif
