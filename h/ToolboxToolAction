#ifndef __cplusplus
#error Header file "ToolboxToolAction.h" may only be used from C++
#endif
#pragma force_top_level
#pragma include_only_once

#ifndef __ToolboxToolAction_h
#define __ToolboxToolAction_h

#include "ClassType.h"
#include "ToolboxGadget.h"
#include "toolbox.h"

typedef struct {
  ToolboxEventHeader hdr;
  int                new_state;
} ToolActionSelectionEvent;

class ToolboxToolAction : public ToolboxGadget {
  public:

    enum ToolActionMethods {
      ToolAction_SetIdent      =  0x140140,
      ToolAction_GetIdent,     // 0x140141
      ToolAction_SetAction,    // 0x140142
      ToolAction_GetAction,    // 0x140143
      ToolAction_SetClickShow, // 0x140144
      ToolAction_GetClickShow, // 0x140145
      ToolAction_SetState,     // 0x140146
      ToolAction_GetState,     // 0x140147
      ToolAction_SetPressed,   // 0x140148
      ToolAction_GetPressed    // 0x140149
    };

    enum ToolActionEvents {
      ToolAction_SelectEvent = 0x140140
    };


    ToolboxToolAction();
    ToolboxToolAction(ObjectId windowId, ComponentId gadgetId);
    ToolboxToolAction(ObjectId windowId, ComponentId gadgetId, unsigned int flags);
    ToolboxToolAction& setIdent(char *ident);
    ToolboxToolAction& getIdent(char *ident, int size, int *nchar);
    ToolboxToolAction& setAction(unsigned int select, unsigned int adjust);
    ToolboxToolAction& setClickShow(ObjectId selectObj, ObjectId adjustObj);
    ToolboxToolAction& getClickShow(ObjectId *selectObj, ObjectId *adjustObj);
    ToolboxToolAction& setState(unsigned int state);
    unsigned int getState();
    ToolboxToolAction& setPressed(unsigned int pressed);
    unsigned int getPressed();

    void showProperties() {};
    char* getClassName() { return "ToolboxToolAction";}
    int getClassType() { return ClassType_ToolboxToolAction;}
};

#endif
