#ifndef __cplusplus
#error Header file "ToolboxNumberRange.h" may only be used from C++
#endif
#pragma force_top_level
#pragma include_only_once

#ifndef __ToolboxNumberRange_h
#define __ToolboxNumberRange_h

#include "ClassType.h"
#include "ToolboxGadget.h"

class ToolboxNumberRange : public ToolboxGadget {
  public:
    ToolboxNumberRange();
    ToolboxNumberRange(ObjectId windowId, ComponentId gadgetId);
    ToolboxNumberRange(ObjectId windowId, ComponentId gadgetId, unsigned int flags);
    ToolboxNumberRange& setValue(int value);
    int getValue();
    ToolboxNumberRange& setBounds(int lowerBound, int upperBound, int stepSize, int precision);
    void getBounds(int *lowerBound, int *upperBound, int *stepSize, int *precision);
    void getComponents(ComponentId *numericField, ComponentId *leftAdjuster, ComponentId *rightAdjuster, ComponentId *slider);
    ToolboxNumberRange& gadgetMethod(int methodCode, _kernel_swi_regs *regs);
    ToolboxNumberRange& setFocus();
    ToolboxNumberRange& setFlags(unsigned int flags);
    ToolboxNumberRange& setObjectId(ObjectId windowId);
    ToolboxNumberRange& setComponentId(ComponentId gadgetId);
    ToolboxNumberRange& setGadgetFlags(unsigned int flags);
    ToolboxNumberRange& setHelpMessage(char *message);
    ToolboxNumberRange& moveGadget(BBox *newBbox);

    void showProperties() {};
    char* getClassName() { return "ToolboxNumberRange";};
    int getClassType() { return ClassType_ToolboxNumberRange;};
};

#endif
